[gd_resource type="ShaderMaterial" load_steps=8 format=3 uid="uid://db1fy53axbpso"]

[sub_resource type="VisualShaderNodeInput" id="1"]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeTexture" id="2"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="3"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeColorOp" id="7"]
operator = 4

[sub_resource type="VisualShaderNodeColorConstant" id="8"]
output_port_for_preview = 0
constant = Color(0.392157, 0.392157, 0.392157, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="9"]
parameter_name = "ScalarUniform"
default_value_enabled = true
default_value = 5.0

[sub_resource type="VisualShader" id="5"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float ScalarUniform = 5;



void fragment() {
// Input:4
	vec2 n_out4p0 = SCREEN_UV;


// FloatParameter:8
	float n_out8p0 = ScalarUniform;


// Input:2
	float n_out2p0 = 0.0;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = vec4(0.0);


// ColorConstant:7
	vec4 n_out7p0 = vec4(0.392157, 0.392157, 0.392157, 1.000000);


	vec3 n_out6p0;
// ColorOp:6
	{
		float base = vec3(n_out3p0.xyz).x;
		float blend = vec3(n_out7p0.xyz).x;
		if (base < 0.5) {
			n_out6p0.x = 2.0 * base * blend;
		} else {
			n_out6p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p0.xyz).y;
		float blend = vec3(n_out7p0.xyz).y;
		if (base < 0.5) {
			n_out6p0.y = 2.0 * base * blend;
		} else {
			n_out6p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p0.xyz).z;
		float blend = vec3(n_out7p0.xyz).z;
		if (base < 0.5) {
			n_out6p0.z = 2.0 * base * blend;
		} else {
			n_out6p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Output:0
	COLOR.rgb = n_out6p0;


}
"
graph_offset = Vector2(399, 173)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1520, 240)
nodes/fragment/2/node = SubResource("1")
nodes/fragment/2/position = Vector2(640, 320)
nodes/fragment/3/node = SubResource("2")
nodes/fragment/3/position = Vector2(980, 180)
nodes/fragment/4/node = SubResource("3")
nodes/fragment/4/position = Vector2(600, 140)
nodes/fragment/6/node = SubResource("7")
nodes/fragment/6/position = Vector2(1220, 200)
nodes/fragment/7/node = SubResource("8")
nodes/fragment/7/position = Vector2(1020, 340)
nodes/fragment/8/node = SubResource("9")
nodes/fragment/8/position = Vector2(140, 200)
nodes/fragment/connections = PackedInt32Array(3, 0, 6, 0, 7, 0, 6, 1, 2, 0, 3, 2, 6, 0, 0, 0, 4, 0, 3, 0, 8, 0, 3, 1)

[resource]
resource_local_to_scene = true
shader = SubResource("5")
shader_parameter/ScalarUniform = 2.0
